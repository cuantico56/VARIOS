//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Microsoft.VSDesigner generó automáticamente este código fuente, versión=4.0.30319.42000.
// 
#pragma warning disable 1591

namespace TEST.WS_CERT {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="UtilServiceSoap", Namespace="http://tempuri.org/")]
    public partial class UtilService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback DownloadFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback DownloadLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSerieDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDocumentsSendOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetCertificadoOperationCompleted;
        
        private System.Threading.SendOrPostCallback FirmarOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public UtilService() {
            this.Url = global::TEST.Properties.Settings.Default.TEST_WS_CERT_UtilService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event DownloadFileCompletedEventHandler DownloadFileCompleted;
        
        /// <remarks/>
        public event DownloadLogCompletedEventHandler DownloadLogCompleted;
        
        /// <remarks/>
        public event getSerieDocumentCompletedEventHandler getSerieDocumentCompleted;
        
        /// <remarks/>
        public event getDocumentsSendCompletedEventHandler getDocumentsSendCompleted;
        
        /// <remarks/>
        public event SetCertificadoCompletedEventHandler SetCertificadoCompleted;
        
        /// <remarks/>
        public event FirmarCompletedEventHandler FirmarCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DownloadFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DownloadFile(string ruc, string tipo, string pto_emi, string cod_estab, string documento, string extension, string user, string password) {
            object[] results = this.Invoke("DownloadFile", new object[] {
                        ruc,
                        tipo,
                        pto_emi,
                        cod_estab,
                        documento,
                        extension,
                        user,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DownloadFileAsync(string ruc, string tipo, string pto_emi, string cod_estab, string documento, string extension, string user, string password) {
            this.DownloadFileAsync(ruc, tipo, pto_emi, cod_estab, documento, extension, user, password, null);
        }
        
        /// <remarks/>
        public void DownloadFileAsync(string ruc, string tipo, string pto_emi, string cod_estab, string documento, string extension, string user, string password, object userState) {
            if ((this.DownloadFileOperationCompleted == null)) {
                this.DownloadFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDownloadFileOperationCompleted);
            }
            this.InvokeAsync("DownloadFile", new object[] {
                        ruc,
                        tipo,
                        pto_emi,
                        cod_estab,
                        documento,
                        extension,
                        user,
                        password}, this.DownloadFileOperationCompleted, userState);
        }
        
        private void OnDownloadFileOperationCompleted(object arg) {
            if ((this.DownloadFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DownloadFileCompleted(this, new DownloadFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DownloadLog", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DownloadLog(string ruc, string anio, string mes, string dia, string user, string password) {
            object[] results = this.Invoke("DownloadLog", new object[] {
                        ruc,
                        anio,
                        mes,
                        dia,
                        user,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DownloadLogAsync(string ruc, string anio, string mes, string dia, string user, string password) {
            this.DownloadLogAsync(ruc, anio, mes, dia, user, password, null);
        }
        
        /// <remarks/>
        public void DownloadLogAsync(string ruc, string anio, string mes, string dia, string user, string password, object userState) {
            if ((this.DownloadLogOperationCompleted == null)) {
                this.DownloadLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDownloadLogOperationCompleted);
            }
            this.InvokeAsync("DownloadLog", new object[] {
                        ruc,
                        anio,
                        mes,
                        dia,
                        user,
                        password}, this.DownloadLogOperationCompleted, userState);
        }
        
        private void OnDownloadLogOperationCompleted(object arg) {
            if ((this.DownloadLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DownloadLogCompleted(this, new DownloadLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getSerieDocument", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getSerieDocument(string ruc, string pto_emi, string cod_estab, string tipodoc) {
            object[] results = this.Invoke("getSerieDocument", new object[] {
                        ruc,
                        pto_emi,
                        cod_estab,
                        tipodoc});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getSerieDocumentAsync(string ruc, string pto_emi, string cod_estab, string tipodoc) {
            this.getSerieDocumentAsync(ruc, pto_emi, cod_estab, tipodoc, null);
        }
        
        /// <remarks/>
        public void getSerieDocumentAsync(string ruc, string pto_emi, string cod_estab, string tipodoc, object userState) {
            if ((this.getSerieDocumentOperationCompleted == null)) {
                this.getSerieDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSerieDocumentOperationCompleted);
            }
            this.InvokeAsync("getSerieDocument", new object[] {
                        ruc,
                        pto_emi,
                        cod_estab,
                        tipodoc}, this.getSerieDocumentOperationCompleted, userState);
        }
        
        private void OngetSerieDocumentOperationCompleted(object arg) {
            if ((this.getSerieDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSerieDocumentCompleted(this, new getSerieDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getDocumentsSend", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getDocumentsSend(string UsuarioAplicacion, string PasswordAplicacion, string ruc) {
            object[] results = this.Invoke("getDocumentsSend", new object[] {
                        UsuarioAplicacion,
                        PasswordAplicacion,
                        ruc});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getDocumentsSendAsync(string UsuarioAplicacion, string PasswordAplicacion, string ruc) {
            this.getDocumentsSendAsync(UsuarioAplicacion, PasswordAplicacion, ruc, null);
        }
        
        /// <remarks/>
        public void getDocumentsSendAsync(string UsuarioAplicacion, string PasswordAplicacion, string ruc, object userState) {
            if ((this.getDocumentsSendOperationCompleted == null)) {
                this.getDocumentsSendOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDocumentsSendOperationCompleted);
            }
            this.InvokeAsync("getDocumentsSend", new object[] {
                        UsuarioAplicacion,
                        PasswordAplicacion,
                        ruc}, this.getDocumentsSendOperationCompleted, userState);
        }
        
        private void OngetDocumentsSendOperationCompleted(object arg) {
            if ((this.getDocumentsSendCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDocumentsSendCompleted(this, new getDocumentsSendCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetCertificado", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public InternalResponse SetCertificado(string UsuarioAplicacion, string PasswordAplicacion, string ruc, string certificado64, string certificadoClaveBase64) {
            object[] results = this.Invoke("SetCertificado", new object[] {
                        UsuarioAplicacion,
                        PasswordAplicacion,
                        ruc,
                        certificado64,
                        certificadoClaveBase64});
            return ((InternalResponse)(results[0]));
        }
        
        /// <remarks/>
        public void SetCertificadoAsync(string UsuarioAplicacion, string PasswordAplicacion, string ruc, string certificado64, string certificadoClaveBase64) {
            this.SetCertificadoAsync(UsuarioAplicacion, PasswordAplicacion, ruc, certificado64, certificadoClaveBase64, null);
        }
        
        /// <remarks/>
        public void SetCertificadoAsync(string UsuarioAplicacion, string PasswordAplicacion, string ruc, string certificado64, string certificadoClaveBase64, object userState) {
            if ((this.SetCertificadoOperationCompleted == null)) {
                this.SetCertificadoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetCertificadoOperationCompleted);
            }
            this.InvokeAsync("SetCertificado", new object[] {
                        UsuarioAplicacion,
                        PasswordAplicacion,
                        ruc,
                        certificado64,
                        certificadoClaveBase64}, this.SetCertificadoOperationCompleted, userState);
        }
        
        private void OnSetCertificadoOperationCompleted(object arg) {
            if ((this.SetCertificadoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetCertificadoCompleted(this, new SetCertificadoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Firmar", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Firmar() {
            object[] results = this.Invoke("Firmar", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FirmarAsync() {
            this.FirmarAsync(null);
        }
        
        /// <remarks/>
        public void FirmarAsync(object userState) {
            if ((this.FirmarOperationCompleted == null)) {
                this.FirmarOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFirmarOperationCompleted);
            }
            this.InvokeAsync("Firmar", new object[0], this.FirmarOperationCompleted, userState);
        }
        
        private void OnFirmarOperationCompleted(object arg) {
            if ((this.FirmarCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FirmarCompleted(this, new FirmarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class InternalResponse {
        
        private int codeField;
        
        private string messageField;
        
        private byte[] xmlField;
        
        /// <remarks/>
        public int code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] xml {
            get {
                return this.xmlField;
            }
            set {
                this.xmlField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void DownloadFileCompletedEventHandler(object sender, DownloadFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DownloadFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DownloadFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void DownloadLogCompletedEventHandler(object sender, DownloadLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DownloadLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DownloadLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getSerieDocumentCompletedEventHandler(object sender, getSerieDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSerieDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSerieDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getDocumentsSendCompletedEventHandler(object sender, getDocumentsSendCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDocumentsSendCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDocumentsSendCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SetCertificadoCompletedEventHandler(object sender, SetCertificadoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetCertificadoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetCertificadoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public InternalResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((InternalResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void FirmarCompletedEventHandler(object sender, FirmarCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FirmarCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FirmarCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591